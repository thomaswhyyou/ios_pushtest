# References:
# http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/
# https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
# https://github.com/benoitc/gunicorn/blob/master/examples/nginx.conf

upstream uwsgicluster {

  server unix:{{ app_home_dir }}/run/uwsgi.sock fail_timeout=0;

  # for TCP setups, point these to your backend servers
  # server 192.168.0.7:8080 fail_timeout=0;
  # server 192.168.0.8:8080 fail_timeout=0;
  # server 192.168.0.9:8080 fail_timeout=0;

}

server {

    listen          80;
    server_name     www.{{ app_domain }}
                    {{ app_domain }}
                    _
                    ;

    charset                 utf-8;
    keepalive_timeout       5;
    # client_max_body_size    1m; # 1m is default

    error_log               {{ app_home_dir }}/log/nginx-error.log;

    {% if nginx_access_log_on %}
    access_log              {{ app_home_dir }}/log/nginx-access.log;
    {% else %}
    access_log              off;
    {% endif %}

    {% if app_static_dir %}
    location /static/ {
        alias               {{ app_static_dir }}/;
    }
    {% endif %}

    {% if app_media_dir %}
    location /media/ {
        alias               {{ app_media_dir }}/;
    }
    {% endif %}

    location / {
        include             uwsgi_params;
        uwsgi_pass          uwsgicluster;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
    }
}
